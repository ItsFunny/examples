#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#


#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0


#
# list of participating organizations in this network
#

organizations:
  Org1MSP:
    mspid: Org1MSP
    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/org1.demo.com/users/{username}@org1.demo.com/msp
    peers:
      - peer0.org1.demo.com
    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca.org1.demo.com
  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
#
# The client section used by GO SDK.
#
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: Org1MSP

  logging:
    level: debug

  eventService:
    type: eventhub

  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: /Users/joker/go/src/examples/blockchain/solo/solo_single_org/crypto-config

  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    # [Optional]. Used by user store. Not needed if all credentials are embedded in configuration
    # and enrollments are performed elswhere.
    path: "/tmp/hyperledger/state-store"

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: '/tmp/hyperledger/store'

    # BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: false

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      key:
        path:
      cert:
        path:

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  #[Required if _default not defined; Optional if _default defined].
  # name of the channel
  demochannel:
    # list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("FBI" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    # deprecated: not recommended, to override any orderer configuration items, entity matchers should be used.
    #    orderers:
    #      - orderer.citizens.com
    #[Required if _default peers not defined; Optional if _default peers defined].
    # list of peers from participating orgs
    peers:
      peer0.org1.demo.com:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true
#      usercoin0.org1.demo.com:
#        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
#        # have the chaincode installed. The app can also use this property to decide which peers
#        # to send the chaincode install request. Default: true
#        endorsingPeer: true
#
#        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
#        # installed. The app can also use this property to decide which peers to send the
#        # chaincode install request. Default: true
#        chaincodeQuery: true
#
#        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
#        # queryBlock(), queryTransaction(), etc. Default: true
#        ledgerQuery: true
#
#        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
#        # produce events but the app typically only needs to connect to one to listen to events.
#        # Default: true
#        eventSource: true




#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer0.demo.com:
    #    url: localhost:6050
    #    url: 192.168.161.139:6050
    url: orderer0.demo.com:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer0.demo.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /Users/joker/go/src/examples/blockchain/solo/solo_single_org/crypto-config/ordererOrganizations/demo.com/tlsca/tlsca.demo.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.org1.demo.com:
    # this URL is used to send endorsement and query requests
    url: peer0.org1.demo.com:8051
    grpcOptions:
      ssl-target-name-override: peer0.org1.demo.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /Users/joker/go/src/examples/blockchain/solo/solo_single_org/crypto-config/peerOrganizations/org1.demo.com/tlsca/tlsca.org1.demo.com-cert.pem




#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca.org1.demo.com:
    url: https://ca.org1.demo.com:7054
    tlsCACerts:
      # Comma-Separated list of paths
      path: /Users/joker/go/src/examples/blockchain/solo/solo_single_org/crypto-config/peerOrganizations/org1.demo.com/peers/ca.org1.demo.com/tls/ca.crt
      # Client key and cert for SSL handshake with Fabric CA
      client:
        key:
          path: /Users/joker/go/src/examples/blockchain/solo/solo_single_org/crypto-config/peerOrganizations/org1.demo.com/peers/ca.org1.demo.com/tls/server.key
        cert:
          path: /Users/joker/go/src/examples/blockchain/solo/solo_single_org/crypto-config/peerOrganizations/org1.demo.com/peers/ca.org1.demo.com/tls/server.crt
    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      enrollId: admin
      enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca.org1.demo.com




  # EntityMatchers enable substitution of network hostnames with static configurations
  # so that properties can be mapped. Regex can be used for this purpose
  # UrlSubstitutionExp can be empty which means the same network hostname will be used
  # UrlSubstitutionExp can be given same as mapped peer url, so that mapped peer url can be used
  # UrlSubstitutionExp can have golang regex matchers like $1.local.example.$2:$3 for pattern
  # like peer0.fbi.citizens.com:1234 which converts peer0.fbi.citizens.com to peer0.FBI.local.citizens.com:1234
  # sslTargetOverrideUrlSubstitutionExp follow in the same lines as
  # SubstitutionExp for the fields gprcOptions.ssl-target-name-override respectively
# In any case mappedHost's config will be used, so mapped host cannot be empty, if entityMatchers are used
#entityMatchers:
#entityMatchers:
#  peer:
#    - pattern: (\w+).fbi.citizens.com:(\d+)
#      urlSubstitutionExp: $1.fbi.citizens.com:$2
#      sslTargetOverrideUrlSubstitutionExp: $1.fbi.citizens.com
#      mappedHost: peer0.fbi.citizens.com
#
#
#    - pattern: (\w+).example1.(\w+):(\d+)
#      urlSubstitutionExp: $1.fbi.citizens.com.$2:$3
#      sslTargetOverrideUrlSubstitutionExp: $1.fbi.citizens.com.$2
#      mappedHost: peer0.fbi.citizens.com
#
#    - pattern: (\w+).fbi.citizens.com.(\w+):(\d+)
#      urlSubstitutionExp: peer0.fbi.citizens.com:8051
#      sslTargetOverrideUrlSubstitutionExp: peer0.fbi.citizens.com
#      mappedHost: peer0.fbi.citizens.com
#
#  orderer:
#    - pattern: (\w+).example.(\w+)
#      urlSubstitutionExp: orderer.citizens.com:6050
#      sslTargetOverrideUrlSubstitutionExp: orderer.citizens.com
#      mappedHost: orderer.citizens.com
#
#    - pattern: (\w+).example2.(\w+)
#      urlSubstitutionExp: localhost:6050
#      sslTargetOverrideUrlSubstitutionExp: localhost
#      mappedHost: orderer.citizens.com
#
#    - pattern: (\w+).example3.(\w+)
#      urlSubstitutionExp:
#      sslTargetOverrideUrlSubstitutionExp:
#      mappedHost: orderer.citizens.com
#
#    - pattern: (\w+).example4.(\w+):(\d+)
#      urlSubstitutionExp: $1.example.$2:$3
#      sslTargetOverrideUrlSubstitutionExp: $1.example.$2
#      mappedHost: orderer.citizens.com
#
#  certificateAuthority:
#    - pattern: (\w+).fbi.citizens.com.(\w+)
#      urlSubstitutionExp:
#      mappedHost: ca.fbi.citizens.com
#