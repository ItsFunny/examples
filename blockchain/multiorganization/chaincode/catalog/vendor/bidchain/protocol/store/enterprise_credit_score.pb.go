// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enterprise_credit_score.proto

package store

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 企业信用分
type StoreEnterpriseCreditScore struct {
	// 企业组织机构代码
	OrgCode string `protobuf:"bytes,1,opt,name=orgCode,proto3" json:"orgCode,omitempty"`
	// 企业统一社会信用代码
	UnifiedCreditCode string `protobuf:"bytes,2,opt,name=unifiedCreditCode,proto3" json:"unifiedCreditCode,omitempty"`
	// 企业的唯一标识
	CompanyId string `protobuf:"bytes,3,opt,name=companyId,proto3" json:"companyId,omitempty"`
	// 企业的名称
	CompanyName string `protobuf:"bytes,4,opt,name=companyName,proto3" json:"companyName,omitempty"`
	// 当日的诚信分
	Integrity string `protobuf:"bytes,5,opt,name=integrity,proto3" json:"integrity,omitempty"`
	// 交易中心网站对应的排名地址
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// yyyyMMddHHmmss 时间戳
	TimeStamp string `protobuf:"bytes,7,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	// 平台id
	PlatformId string `protobuf:"bytes,8,opt,name=platformId,proto3" json:"platformId,omitempty"`
	// 企业信用分类型
	IntegrityType        string   `protobuf:"bytes,9,opt,name=integrityType,proto3" json:"integrityType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreEnterpriseCreditScore) Reset()         { *m = StoreEnterpriseCreditScore{} }
func (m *StoreEnterpriseCreditScore) String() string { return proto.CompactTextString(m) }
func (*StoreEnterpriseCreditScore) ProtoMessage()    {}
func (*StoreEnterpriseCreditScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8db9dfd8fa1b8fc, []int{0}
}

func (m *StoreEnterpriseCreditScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreEnterpriseCreditScore.Unmarshal(m, b)
}
func (m *StoreEnterpriseCreditScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreEnterpriseCreditScore.Marshal(b, m, deterministic)
}
func (m *StoreEnterpriseCreditScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreEnterpriseCreditScore.Merge(m, src)
}
func (m *StoreEnterpriseCreditScore) XXX_Size() int {
	return xxx_messageInfo_StoreEnterpriseCreditScore.Size(m)
}
func (m *StoreEnterpriseCreditScore) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreEnterpriseCreditScore.DiscardUnknown(m)
}

var xxx_messageInfo_StoreEnterpriseCreditScore proto.InternalMessageInfo

func (m *StoreEnterpriseCreditScore) GetOrgCode() string {
	if m != nil {
		return m.OrgCode
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetUnifiedCreditCode() string {
	if m != nil {
		return m.UnifiedCreditCode
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetIntegrity() string {
	if m != nil {
		return m.Integrity
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *StoreEnterpriseCreditScore) GetIntegrityType() string {
	if m != nil {
		return m.IntegrityType
	}
	return ""
}

func init() {
	proto.RegisterType((*StoreEnterpriseCreditScore)(nil), "StoreEnterpriseCreditScore")
}

func init() { proto.RegisterFile("enterprise_credit_score.proto", fileDescriptor_f8db9dfd8fa1b8fc) }

var fileDescriptor_f8db9dfd8fa1b8fc = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xd5, 0x96, 0x36, 0xe4, 0x10, 0x12, 0x78, 0x3a, 0x21, 0x40, 0x15, 0x62, 0x60, 0x40,
	0x2c, 0xbc, 0x01, 0x15, 0x43, 0x17, 0x06, 0xc2, 0xc4, 0x52, 0x85, 0xf8, 0x5a, 0x59, 0xaa, 0x63,
	0xeb, 0x72, 0x1d, 0xf2, 0x66, 0x3c, 0x1e, 0xf2, 0x05, 0x4c, 0x10, 0x9b, 0xef, 0xfb, 0xbf, 0xdf,
	0xc3, 0x0f, 0x57, 0xd4, 0x0a, 0x71, 0x64, 0xd7, 0xd1, 0xa6, 0x61, 0xb2, 0x4e, 0x36, 0x5d, 0x13,
	0x98, 0x1e, 0x22, 0x07, 0x09, 0x37, 0x9f, 0x53, 0xb8, 0xa8, 0x24, 0x30, 0x3d, 0x67, 0x6d, 0xa5,
	0x56, 0x95, 0x24, 0x83, 0x50, 0x04, 0xde, 0xad, 0x82, 0x25, 0x9c, 0x2c, 0x27, 0x77, 0xe5, 0xeb,
	0xcf, 0x69, 0xee, 0xe1, 0xfc, 0xd0, 0xba, 0xad, 0x23, 0x3b, 0xf8, 0xea, 0x4c, 0xd5, 0xf9, 0x1f,
	0x98, 0x4b, 0x28, 0x9b, 0xe0, 0x63, 0xdd, 0xf6, 0x6b, 0x8b, 0x33, 0xb5, 0x7e, 0x81, 0x59, 0xc2,
	0xc9, 0xf7, 0xf1, 0x52, 0x7b, 0xc2, 0x23, 0xcd, 0xc7, 0x28, 0xf5, 0x5d, 0x2b, 0xb4, 0x63, 0x27,
	0x3d, 0xce, 0x87, 0x7e, 0x06, 0xe6, 0x0c, 0x66, 0x07, 0xde, 0xe3, 0x42, 0x79, 0x7a, 0x26, 0x5f,
	0x9c, 0xa7, 0x4a, 0x6a, 0x1f, 0xb1, 0x18, 0xfc, 0x0c, 0xcc, 0x35, 0x40, 0xdc, 0xd7, 0xb2, 0x0d,
	0xec, 0xd7, 0x16, 0x8f, 0x35, 0x1e, 0x11, 0x73, 0x0b, 0xa7, 0xf9, 0xf3, 0xb7, 0x3e, 0x12, 0x96,
	0xaa, 0xfc, 0x85, 0x4f, 0xc5, 0xfb, 0xbc, 0x4b, 0xcb, 0x7d, 0x2c, 0x74, 0xca, 0xc7, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xbe, 0xad, 0xce, 0xdd, 0x6b, 0x01, 0x00, 0x00,
}
