// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crypto_message.proto

package store

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 密文类型
type StoreCryptoDataType int32

const (
	StoreCryptoDataType_CRYPTO_MESSAGE StoreCryptoDataType = 0
	StoreCryptoDataType_FILE           StoreCryptoDataType = 1
)

var StoreCryptoDataType_name = map[int32]string{
	0: "CRYPTO_MESSAGE",
	1: "FILE",
}

var StoreCryptoDataType_value = map[string]int32{
	"CRYPTO_MESSAGE": 0,
	"FILE":           1,
}

func (x StoreCryptoDataType) String() string {
	return proto.EnumName(StoreCryptoDataType_name, int32(x))
}

func (StoreCryptoDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c14432bc9757b58d, []int{0}
}

// 密文信息
type StoreCryptoMessage struct {
	// 平台id
	PlatformId string `protobuf:"bytes,1,opt,name=platformId,proto3" json:"platformId,omitempty"`
	// 密文id(上传数据的时候不用填, msgid等于msgData的hash值
	MsgId string `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// 加密前hash
	HashBeforeEncrypt []byte `protobuf:"bytes,3,opt,name=hashBeforeEncrypt,proto3" json:"hashBeforeEncrypt,omitempty"`
	// 加密方法
	CryptMethod int32 `protobuf:"varint,4,opt,name=cryptMethod,proto3" json:"cryptMethod,omitempty"`
	// 加密信封信息
	CryptoEnvelopeMsg []byte `protobuf:"bytes,5,opt,name=cryptoEnvelopeMsg,proto3" json:"cryptoEnvelopeMsg,omitempty"`
	// 数据类型(文件或者密文信息)
	DataType StoreCryptoDataType `protobuf:"varint,6,opt,name=dataType,proto3,enum=StoreCryptoDataType" json:"dataType,omitempty"`
	// 密文信息(如果是文件则是文件hash)
	MsgData              []byte   `protobuf:"bytes,7,opt,name=msgData,proto3" json:"msgData,omitempty"`
	Mask                 int64    `protobuf:"varint,8,opt,name=mask,proto3" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreCryptoMessage) Reset()         { *m = StoreCryptoMessage{} }
func (m *StoreCryptoMessage) String() string { return proto.CompactTextString(m) }
func (*StoreCryptoMessage) ProtoMessage()    {}
func (*StoreCryptoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c14432bc9757b58d, []int{0}
}

func (m *StoreCryptoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreCryptoMessage.Unmarshal(m, b)
}
func (m *StoreCryptoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreCryptoMessage.Marshal(b, m, deterministic)
}
func (m *StoreCryptoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreCryptoMessage.Merge(m, src)
}
func (m *StoreCryptoMessage) XXX_Size() int {
	return xxx_messageInfo_StoreCryptoMessage.Size(m)
}
func (m *StoreCryptoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreCryptoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StoreCryptoMessage proto.InternalMessageInfo

func (m *StoreCryptoMessage) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *StoreCryptoMessage) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *StoreCryptoMessage) GetHashBeforeEncrypt() []byte {
	if m != nil {
		return m.HashBeforeEncrypt
	}
	return nil
}

func (m *StoreCryptoMessage) GetCryptMethod() int32 {
	if m != nil {
		return m.CryptMethod
	}
	return 0
}

func (m *StoreCryptoMessage) GetCryptoEnvelopeMsg() []byte {
	if m != nil {
		return m.CryptoEnvelopeMsg
	}
	return nil
}

func (m *StoreCryptoMessage) GetDataType() StoreCryptoDataType {
	if m != nil {
		return m.DataType
	}
	return StoreCryptoDataType_CRYPTO_MESSAGE
}

func (m *StoreCryptoMessage) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *StoreCryptoMessage) GetMask() int64 {
	if m != nil {
		return m.Mask
	}
	return 0
}

// 副本加密字段信息
type StoreEncryptedMirrorData struct {
	MsgId string `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// 字段名称 对应的值的hash值
	SummaryInfoList []*StoreEncryptedMirrorDataSummaryInfoPair `protobuf:"bytes,2,rep,name=summaryInfoList,proto3" json:"summaryInfoList,omitempty"`
	// 摘要map的hash值
	SummaryInfoListHash  []byte   `protobuf:"bytes,3,opt,name=summaryInfoListHash,proto3" json:"summaryInfoListHash,omitempty"`
	Mask                 int64    `protobuf:"varint,4,opt,name=mask,proto3" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreEncryptedMirrorData) Reset()         { *m = StoreEncryptedMirrorData{} }
func (m *StoreEncryptedMirrorData) String() string { return proto.CompactTextString(m) }
func (*StoreEncryptedMirrorData) ProtoMessage()    {}
func (*StoreEncryptedMirrorData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c14432bc9757b58d, []int{1}
}

func (m *StoreEncryptedMirrorData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreEncryptedMirrorData.Unmarshal(m, b)
}
func (m *StoreEncryptedMirrorData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreEncryptedMirrorData.Marshal(b, m, deterministic)
}
func (m *StoreEncryptedMirrorData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreEncryptedMirrorData.Merge(m, src)
}
func (m *StoreEncryptedMirrorData) XXX_Size() int {
	return xxx_messageInfo_StoreEncryptedMirrorData.Size(m)
}
func (m *StoreEncryptedMirrorData) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreEncryptedMirrorData.DiscardUnknown(m)
}

var xxx_messageInfo_StoreEncryptedMirrorData proto.InternalMessageInfo

func (m *StoreEncryptedMirrorData) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *StoreEncryptedMirrorData) GetSummaryInfoList() []*StoreEncryptedMirrorDataSummaryInfoPair {
	if m != nil {
		return m.SummaryInfoList
	}
	return nil
}

func (m *StoreEncryptedMirrorData) GetSummaryInfoListHash() []byte {
	if m != nil {
		return m.SummaryInfoListHash
	}
	return nil
}

func (m *StoreEncryptedMirrorData) GetMask() int64 {
	if m != nil {
		return m.Mask
	}
	return 0
}

type StoreEncryptedMirrorDataSummaryInfoPair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreEncryptedMirrorDataSummaryInfoPair) Reset() {
	*m = StoreEncryptedMirrorDataSummaryInfoPair{}
}
func (m *StoreEncryptedMirrorDataSummaryInfoPair) String() string { return proto.CompactTextString(m) }
func (*StoreEncryptedMirrorDataSummaryInfoPair) ProtoMessage()    {}
func (*StoreEncryptedMirrorDataSummaryInfoPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_c14432bc9757b58d, []int{1, 0}
}

func (m *StoreEncryptedMirrorDataSummaryInfoPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreEncryptedMirrorDataSummaryInfoPair.Unmarshal(m, b)
}
func (m *StoreEncryptedMirrorDataSummaryInfoPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreEncryptedMirrorDataSummaryInfoPair.Marshal(b, m, deterministic)
}
func (m *StoreEncryptedMirrorDataSummaryInfoPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreEncryptedMirrorDataSummaryInfoPair.Merge(m, src)
}
func (m *StoreEncryptedMirrorDataSummaryInfoPair) XXX_Size() int {
	return xxx_messageInfo_StoreEncryptedMirrorDataSummaryInfoPair.Size(m)
}
func (m *StoreEncryptedMirrorDataSummaryInfoPair) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreEncryptedMirrorDataSummaryInfoPair.DiscardUnknown(m)
}

var xxx_messageInfo_StoreEncryptedMirrorDataSummaryInfoPair proto.InternalMessageInfo

func (m *StoreEncryptedMirrorDataSummaryInfoPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StoreEncryptedMirrorDataSummaryInfoPair) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterEnum("StoreCryptoDataType", StoreCryptoDataType_name, StoreCryptoDataType_value)
	proto.RegisterType((*StoreCryptoMessage)(nil), "StoreCryptoMessage")
	proto.RegisterType((*StoreEncryptedMirrorData)(nil), "StoreEncryptedMirrorData")
	proto.RegisterType((*StoreEncryptedMirrorDataSummaryInfoPair)(nil), "StoreEncryptedMirrorData.summaryInfoPair")
}

func init() { proto.RegisterFile("crypto_message.proto", fileDescriptor_c14432bc9757b58d) }

var fileDescriptor_c14432bc9757b58d = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0xaf, 0xd2, 0x40,
	0x14, 0xc5, 0x9d, 0xfe, 0x01, 0xbc, 0x10, 0xc4, 0x81, 0xc5, 0xc4, 0x85, 0x69, 0x58, 0x55, 0x63,
	0x1a, 0x02, 0x0b, 0xd7, 0x82, 0x55, 0x9b, 0xd0, 0x48, 0xa6, 0x6c, 0x74, 0x43, 0x46, 0x3b, 0xb4,
	0x04, 0xca, 0x34, 0x33, 0xd5, 0xa4, 0x7b, 0x3f, 0x8c, 0x1f, 0xd3, 0x74, 0x5a, 0x79, 0x7d, 0xc0,
	0xdb, 0xdd, 0xb9, 0xbf, 0xde, 0x33, 0x73, 0xce, 0x2d, 0x4c, 0x7e, 0xca, 0x32, 0x2f, 0xc4, 0x2e,
	0xe3, 0x4a, 0xb1, 0x84, 0x7b, 0xb9, 0x14, 0x85, 0x98, 0xfe, 0x35, 0x00, 0x47, 0x85, 0x90, 0x7c,
	0xa5, 0x69, 0x58, 0x43, 0xfc, 0x1a, 0x20, 0x3f, 0xb1, 0x62, 0x2f, 0x64, 0x16, 0xc4, 0x04, 0x39,
	0xc8, 0x7d, 0x4e, 0x5b, 0x1d, 0x3c, 0x01, 0x3b, 0x53, 0x49, 0x10, 0x13, 0x43, 0xa3, 0xfa, 0x80,
	0xdf, 0xc1, 0xcb, 0x94, 0xa9, 0x74, 0xc9, 0xf7, 0x42, 0x72, 0xff, 0xac, 0x2f, 0x24, 0xa6, 0x83,
	0xdc, 0x01, 0xbd, 0x05, 0xd8, 0x81, 0xbe, 0x2e, 0x42, 0x5e, 0xa4, 0x22, 0x26, 0x96, 0x83, 0x5c,
	0x9b, 0xb6, 0x5b, 0x95, 0x5e, 0xfd, 0x68, 0xff, 0xfc, 0x9b, 0x9f, 0x44, 0xce, 0x43, 0x95, 0x10,
	0xbb, 0xd6, 0xbb, 0x01, 0x78, 0x06, 0xbd, 0x98, 0x15, 0x6c, 0x5b, 0xe6, 0x9c, 0x74, 0x1c, 0xe4,
	0x0e, 0xe7, 0x13, 0xaf, 0x65, 0xed, 0x63, 0xc3, 0xe8, 0xe5, 0x2b, 0x4c, 0xa0, 0x9b, 0xa9, 0xa4,
	0x02, 0xa4, 0xab, 0x55, 0xff, 0x1f, 0x31, 0x06, 0x2b, 0x63, 0xea, 0x48, 0x7a, 0x0e, 0x72, 0x4d,
	0xaa, 0xeb, 0xe9, 0x1f, 0x03, 0x88, 0xd6, 0x6b, 0x0c, 0xf0, 0x38, 0x3c, 0x48, 0x29, 0xa4, 0x1e,
	0xb8, 0x04, 0x82, 0xda, 0x81, 0x44, 0xf0, 0x42, 0xfd, 0xca, 0x32, 0x26, 0xcb, 0xe0, 0xbc, 0x17,
	0xeb, 0x83, 0x2a, 0x88, 0xe1, 0x98, 0x6e, 0x7f, 0xfe, 0xc6, 0x7b, 0x4a, 0xc9, 0x6b, 0x0d, 0x6c,
	0xd8, 0x41, 0xd2, 0x6b, 0x05, 0x3c, 0x83, 0xf1, 0x55, 0xeb, 0x0b, 0x53, 0x69, 0x93, 0xf3, 0x3d,
	0x74, 0x71, 0x63, 0x3d, 0xb8, 0x79, 0xf5, 0xfe, 0xd1, 0xd3, 0xaa, 0x9b, 0xf0, 0x08, 0xcc, 0x23,
	0x2f, 0x1b, 0x07, 0x55, 0x59, 0x0d, 0x56, 0x7b, 0xd3, 0x5b, 0x1e, 0x50, 0x5d, 0xbf, 0x5d, 0xc0,
	0xf8, 0x4e, 0xaa, 0x18, 0xc3, 0x70, 0x45, 0xbf, 0x6d, 0xb6, 0x5f, 0x77, 0xa1, 0x1f, 0x45, 0x1f,
	0x3e, 0xfb, 0xa3, 0x67, 0xb8, 0x07, 0xd6, 0xa7, 0x60, 0xed, 0x8f, 0xd0, 0xb2, 0xfb, 0xdd, 0x56,
	0xd5, 0xd0, 0x8f, 0x8e, 0xfe, 0xed, 0x16, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x38, 0x01, 0x0f,
	0xed, 0x8e, 0x02, 0x00, 0x00,
}
