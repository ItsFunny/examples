// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base-enterpriseInfo.proto

package base

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnterpriseInfo struct {
	CompanyName          string   `protobuf:"bytes,1,opt,name=companyName,proto3" json:"companyName,omitempty"`
	CompanyLicenseNumber string   `protobuf:"bytes,2,opt,name=companyLicenseNumber,proto3" json:"companyLicenseNumber,omitempty"`
	CompanyOrgCode       string   `protobuf:"bytes,3,opt,name=companyOrgCode,proto3" json:"companyOrgCode,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	OpenId               string   `protobuf:"bytes,6,opt,name=openId,proto3" json:"openId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterpriseInfo) Reset()         { *m = EnterpriseInfo{} }
func (m *EnterpriseInfo) String() string { return proto.CompactTextString(m) }
func (*EnterpriseInfo) ProtoMessage()    {}
func (*EnterpriseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5af4427b113bccd0, []int{0}
}

func (m *EnterpriseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterpriseInfo.Unmarshal(m, b)
}
func (m *EnterpriseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterpriseInfo.Marshal(b, m, deterministic)
}
func (m *EnterpriseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterpriseInfo.Merge(m, src)
}
func (m *EnterpriseInfo) XXX_Size() int {
	return xxx_messageInfo_EnterpriseInfo.Size(m)
}
func (m *EnterpriseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterpriseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EnterpriseInfo proto.InternalMessageInfo

func (m *EnterpriseInfo) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *EnterpriseInfo) GetCompanyLicenseNumber() string {
	if m != nil {
		return m.CompanyLicenseNumber
	}
	return ""
}

func (m *EnterpriseInfo) GetCompanyOrgCode() string {
	if m != nil {
		return m.CompanyOrgCode
	}
	return ""
}

func (m *EnterpriseInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *EnterpriseInfo) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *EnterpriseInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func init() {
	proto.RegisterType((*EnterpriseInfo)(nil), "EnterpriseInfo")
}

func init() { proto.RegisterFile("base-enterpriseInfo.proto", fileDescriptor_5af4427b113bccd0) }

var fileDescriptor_5af4427b113bccd0 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x4a, 0x2c, 0x4e,
	0xd5, 0x4d, 0xcd, 0x2b, 0x49, 0x2d, 0x2a, 0x28, 0xca, 0x2c, 0x4e, 0xf5, 0xcc, 0x4b, 0xcb, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x7a, 0xc2, 0xc8, 0xc5, 0xe7, 0x8a, 0x22, 0x21, 0xa4, 0xc0,
	0xc5, 0x9d, 0x9c, 0x9f, 0x5b, 0x90, 0x98, 0x57, 0xe9, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x19, 0x84, 0x2c, 0x24, 0x64, 0xc4, 0x25, 0x02, 0xe5, 0xfa, 0x64, 0x26, 0xa7, 0xe6,
	0x15, 0xa7, 0xfa, 0x95, 0xe6, 0x26, 0xa5, 0x16, 0x49, 0x30, 0x81, 0x95, 0x62, 0x95, 0x13, 0x52,
	0xe3, 0xe2, 0x83, 0x8a, 0xfb, 0x17, 0xa5, 0x3b, 0xe7, 0xa7, 0xa4, 0x4a, 0x30, 0x83, 0x55, 0xa3,
	0x89, 0x0a, 0x49, 0x71, 0x71, 0x94, 0x16, 0xa7, 0x16, 0xe5, 0x81, 0xac, 0x66, 0x01, 0xab, 0x80,
	0xf3, 0x41, 0x2e, 0x2b, 0xc8, 0xc8, 0xcf, 0x83, 0x59, 0xc7, 0x0a, 0x71, 0x19, 0x92, 0x90, 0x90,
	0x18, 0x17, 0x5b, 0x7e, 0x41, 0x6a, 0x9e, 0x67, 0x8a, 0x04, 0x1b, 0x58, 0x12, 0xca, 0x73, 0x92,
	0x8c, 0x12, 0x07, 0xfb, 0x37, 0x39, 0x3f, 0x47, 0xbf, 0xa4, 0x28, 0x31, 0xaf, 0xb8, 0x20, 0xbf,
	0xa8, 0x44, 0x1f, 0x14, 0x2c, 0x49, 0x6c, 0x60, 0x09, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xcd, 0x59, 0xae, 0x3d, 0x25, 0x01, 0x00, 0x00,
}
