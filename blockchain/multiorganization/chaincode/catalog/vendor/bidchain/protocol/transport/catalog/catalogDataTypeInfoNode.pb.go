// Code generated by protoc-gen-go. DO NOT EDIT.
// source: catalog-catalogDataTypeInfoNode.proto

package catalog

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CatalogDataTypeInfoNode struct {
	DataType             string                             `protobuf:"bytes,1,opt,name=dataType,proto3" json:"dataType,omitempty"`
	EnumId               int32                              `protobuf:"varint,2,opt,name=enumId,proto3" json:"enumId,omitempty"`
	EnumEnglishName      string                             `protobuf:"bytes,3,opt,name=enumEnglishName,proto3" json:"enumEnglishName,omitempty"`
	EnumChineseName      string                             `protobuf:"bytes,4,opt,name=enumChineseName,proto3" json:"enumChineseName,omitempty"`
	EnumSourceId         int32                              `protobuf:"varint,5,opt,name=enumSourceId,proto3" json:"enumSourceId,omitempty"`
	EnumValueList        []*CatalogDataTypeInfoNodeCodeInfo `protobuf:"bytes,6,rep,name=enumValueList,proto3" json:"enumValueList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CatalogDataTypeInfoNode) Reset()         { *m = CatalogDataTypeInfoNode{} }
func (m *CatalogDataTypeInfoNode) String() string { return proto.CompactTextString(m) }
func (*CatalogDataTypeInfoNode) ProtoMessage()    {}
func (*CatalogDataTypeInfoNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_0607784abb2eab19, []int{0}
}

func (m *CatalogDataTypeInfoNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogDataTypeInfoNode.Unmarshal(m, b)
}
func (m *CatalogDataTypeInfoNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogDataTypeInfoNode.Marshal(b, m, deterministic)
}
func (m *CatalogDataTypeInfoNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogDataTypeInfoNode.Merge(m, src)
}
func (m *CatalogDataTypeInfoNode) XXX_Size() int {
	return xxx_messageInfo_CatalogDataTypeInfoNode.Size(m)
}
func (m *CatalogDataTypeInfoNode) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogDataTypeInfoNode.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogDataTypeInfoNode proto.InternalMessageInfo

func (m *CatalogDataTypeInfoNode) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *CatalogDataTypeInfoNode) GetEnumId() int32 {
	if m != nil {
		return m.EnumId
	}
	return 0
}

func (m *CatalogDataTypeInfoNode) GetEnumEnglishName() string {
	if m != nil {
		return m.EnumEnglishName
	}
	return ""
}

func (m *CatalogDataTypeInfoNode) GetEnumChineseName() string {
	if m != nil {
		return m.EnumChineseName
	}
	return ""
}

func (m *CatalogDataTypeInfoNode) GetEnumSourceId() int32 {
	if m != nil {
		return m.EnumSourceId
	}
	return 0
}

func (m *CatalogDataTypeInfoNode) GetEnumValueList() []*CatalogDataTypeInfoNodeCodeInfo {
	if m != nil {
		return m.EnumValueList
	}
	return nil
}

func init() {
	proto.RegisterType((*CatalogDataTypeInfoNode)(nil), "CatalogDataTypeInfoNode")
}

func init() {
	proto.RegisterFile("catalog-catalogDataTypeInfoNode.proto", fileDescriptor_0607784abb2eab19)
}

var fileDescriptor_0607784abb2eab19 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4d, 0x4e, 0x2c, 0x49,
	0xcc, 0xc9, 0x4f, 0xd7, 0x85, 0xd2, 0x2e, 0x89, 0x25, 0x89, 0x21, 0x95, 0x05, 0xa9, 0x9e, 0x79,
	0x69, 0xf9, 0x7e, 0xf9, 0x29, 0xa9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x52, 0xba, 0x04, 0x94,
	0x39, 0xe7, 0xa7, 0x80, 0xd9, 0x10, 0xe5, 0x4a, 0xbd, 0x4c, 0x5c, 0xe2, 0xce, 0xd8, 0x55, 0x0a,
	0x49, 0x71, 0x71, 0xa4, 0x40, 0xc5, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x21,
	0x31, 0x2e, 0xb6, 0xd4, 0xbc, 0xd2, 0x5c, 0xcf, 0x14, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20,
	0x28, 0x4f, 0x48, 0x83, 0x8b, 0x1f, 0xc4, 0x72, 0xcd, 0x4b, 0xcf, 0xc9, 0x2c, 0xce, 0xf0, 0x4b,
	0xcc, 0x4d, 0x95, 0x60, 0x06, 0x6b, 0x45, 0x17, 0x86, 0xa9, 0x74, 0xce, 0xc8, 0xcc, 0x4b, 0x2d,
	0x4e, 0x05, 0xab, 0x64, 0x41, 0xa8, 0x44, 0x12, 0x16, 0x52, 0xe2, 0xe2, 0x01, 0x09, 0x05, 0xe7,
	0x97, 0x16, 0x25, 0xa7, 0x7a, 0xa6, 0x48, 0xb0, 0x82, 0x6d, 0x44, 0x11, 0x13, 0x72, 0xe3, 0xe2,
	0x05, 0xf1, 0xc3, 0x12, 0x73, 0x4a, 0x53, 0x7d, 0x32, 0x8b, 0x4b, 0x24, 0xd8, 0x14, 0x98, 0x35,
	0xb8, 0x8d, 0x14, 0xf4, 0x9c, 0xf1, 0x07, 0x43, 0x10, 0xaa, 0x36, 0x27, 0xd5, 0x28, 0xe5, 0xa4,
	0xcc, 0x94, 0xe4, 0x8c, 0xc4, 0xcc, 0x3c, 0x7d, 0x70, 0x08, 0x25, 0xe7, 0xe7, 0xe8, 0x97, 0x14,
	0x25, 0xe6, 0x15, 0x17, 0xe4, 0x17, 0x95, 0xe8, 0x43, 0x03, 0x35, 0x89, 0x0d, 0x2c, 0x67, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x60, 0x6b, 0x5e, 0xe1, 0x95, 0x01, 0x00, 0x00,
}
