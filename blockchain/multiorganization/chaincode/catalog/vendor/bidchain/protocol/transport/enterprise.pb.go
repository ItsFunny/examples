// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enterprise.proto

package transport

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnumEnterpriseType int32

const (
	EnumEnterpriseType_DEFAULT            EnumEnterpriseType = 0
	EnumEnterpriseType_TENDEREE           EnumEnterpriseType = 1
	EnumEnterpriseType_TENDEREE_POXY_ORG  EnumEnterpriseType = 2
	EnumEnterpriseType_BIDDER             EnumEnterpriseType = 3
	EnumEnterpriseType_PURCHASER          EnumEnterpriseType = 4
	EnumEnterpriseType_PURCHASER_POXY_ORG EnumEnterpriseType = 5
	EnumEnterpriseType_SUPPLIER           EnumEnterpriseType = 6
	EnumEnterpriseType_TRANSFEROR         EnumEnterpriseType = 7
	EnumEnterpriseType_ASSIGNEE           EnumEnterpriseType = 8
	EnumEnterpriseType_WINNER             EnumEnterpriseType = 9
	EnumEnterpriseType_OTHER              EnumEnterpriseType = 99
)

var EnumEnterpriseType_name = map[int32]string{
	0:  "DEFAULT",
	1:  "TENDEREE",
	2:  "TENDEREE_POXY_ORG",
	3:  "BIDDER",
	4:  "PURCHASER",
	5:  "PURCHASER_POXY_ORG",
	6:  "SUPPLIER",
	7:  "TRANSFEROR",
	8:  "ASSIGNEE",
	9:  "WINNER",
	99: "OTHER",
}

var EnumEnterpriseType_value = map[string]int32{
	"DEFAULT":            0,
	"TENDEREE":           1,
	"TENDEREE_POXY_ORG":  2,
	"BIDDER":             3,
	"PURCHASER":          4,
	"PURCHASER_POXY_ORG": 5,
	"SUPPLIER":           6,
	"TRANSFEROR":         7,
	"ASSIGNEE":           8,
	"WINNER":             9,
	"OTHER":              99,
}

func (x EnumEnterpriseType) String() string {
	return proto.EnumName(EnumEnterpriseType_name, int32(x))
}

func (EnumEnterpriseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_922055c08d0eda7a, []int{0}
}

type PublicInfo struct {
	//企业副主键
	EnterpriseMirrorId string `protobuf:"bytes,1,opt,name=enterpriseMirrorId,proto3" json:"enterpriseMirrorId,omitempty"`
	//企业注册类型
	EnterpriseType EnumEnterpriseType `protobuf:"varint,2,opt,name=enterpriseType,proto3,enum=EnumEnterpriseType" json:"enterpriseType,omitempty"`
	//企业名称
	EnterpriseName string `protobuf:"bytes,3,opt,name=enterpriseName,proto3" json:"enterpriseName,omitempty"`
	//曾用名
	EnterpriseFormerName *wrappers.StringValue `protobuf:"bytes,4,opt,name=enterpriseFormerName,proto3" json:"enterpriseFormerName,omitempty"`
	//传真
	EnterpriseFax *wrappers.StringValue `protobuf:"bytes,5,opt,name=enterpriseFax,proto3" json:"enterpriseFax,omitempty"`
	//邮箱
	EnterpriseEmail *wrappers.StringValue `protobuf:"bytes,6,opt,name=enterpriseEmail,proto3" json:"enterpriseEmail,omitempty"`
	//联系电话
	EnterprisePhone *wrappers.StringValue `protobuf:"bytes,7,opt,name=enterprisePhone,proto3" json:"enterprisePhone,omitempty"`
	//网站
	EnterpriseWebsite *wrappers.StringValue `protobuf:"bytes,8,opt,name=enterpriseWebsite,proto3" json:"enterpriseWebsite,omitempty"`
	//简介
	EnterpriseIntruduction *wrappers.StringValue `protobuf:"bytes,9,opt,name=enterpriseIntruduction,proto3" json:"enterpriseIntruduction,omitempty"`
	//邮政编码
	EnterpriseZipCode *wrappers.StringValue `protobuf:"bytes,10,opt,name=enterpriseZipCode,proto3" json:"enterpriseZipCode,omitempty"`
	//单位联系地址
	EnterpriseAddress *wrappers.StringValue `protobuf:"bytes,11,opt,name=enterpriseAddress,proto3" json:"enterpriseAddress,omitempty"`
	//国别 http://www.nsfc.gov.cn/publish/portal0/tab274/
	EnterpriseCuntryCode *wrappers.StringValue `protobuf:"bytes,12,opt,name=enterpriseCuntryCode,proto3" json:"enterpriseCuntryCode,omitempty"`
	//注册区域
	EnterpriseLocationCode *wrappers.StringValue `protobuf:"bytes,13,opt,name=enterpriseLocationCode,proto3" json:"enterpriseLocationCode,omitempty"`
	//行业分类 法人机构行业代码
	EnterpriseIndustryCategory *wrappers.StringValue `protobuf:"bytes,14,opt,name=enterpriseIndustryCategory,proto3" json:"enterpriseIndustryCategory,omitempty"`
	//单位经济性质
	EnterpriseInvestmentType *wrappers.StringValue `protobuf:"bytes,15,opt,name=enterpriseInvestmentType,proto3" json:"enterpriseInvestmentType,omitempty"`
	//企业id
	EnterpriseId string `protobuf:"bytes,16,opt,name=enterpriseId,proto3" json:"enterpriseId,omitempty"`
	//注册省
	EnterpriseRegisterProvince *wrappers.StringValue `protobuf:"bytes,17,opt,name=enterpriseRegisterProvince,proto3" json:"enterpriseRegisterProvince,omitempty"`
	//注册市
	EnterpriseRegisterCity *wrappers.StringValue `protobuf:"bytes,18,opt,name=enterpriseRegisterCity,proto3" json:"enterpriseRegisterCity,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *PublicInfo) Reset()         { *m = PublicInfo{} }
func (m *PublicInfo) String() string { return proto.CompactTextString(m) }
func (*PublicInfo) ProtoMessage()    {}
func (*PublicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_922055c08d0eda7a, []int{0}
}

func (m *PublicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicInfo.Unmarshal(m, b)
}
func (m *PublicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicInfo.Marshal(b, m, deterministic)
}
func (m *PublicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicInfo.Merge(m, src)
}
func (m *PublicInfo) XXX_Size() int {
	return xxx_messageInfo_PublicInfo.Size(m)
}
func (m *PublicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PublicInfo proto.InternalMessageInfo

func (m *PublicInfo) GetEnterpriseMirrorId() string {
	if m != nil {
		return m.EnterpriseMirrorId
	}
	return ""
}

func (m *PublicInfo) GetEnterpriseType() EnumEnterpriseType {
	if m != nil {
		return m.EnterpriseType
	}
	return EnumEnterpriseType_DEFAULT
}

func (m *PublicInfo) GetEnterpriseName() string {
	if m != nil {
		return m.EnterpriseName
	}
	return ""
}

func (m *PublicInfo) GetEnterpriseFormerName() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseFormerName
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseFax() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseFax
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseEmail() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseEmail
	}
	return nil
}

func (m *PublicInfo) GetEnterprisePhone() *wrappers.StringValue {
	if m != nil {
		return m.EnterprisePhone
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseWebsite() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseWebsite
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseIntruduction() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseIntruduction
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseZipCode() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseZipCode
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseAddress() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseAddress
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseCuntryCode() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseCuntryCode
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseLocationCode() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseLocationCode
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseIndustryCategory() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseIndustryCategory
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseInvestmentType() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseInvestmentType
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

func (m *PublicInfo) GetEnterpriseRegisterProvince() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseRegisterProvince
	}
	return nil
}

func (m *PublicInfo) GetEnterpriseRegisterCity() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseRegisterCity
	}
	return nil
}

func init() {
	proto.RegisterEnum("EnumEnterpriseType", EnumEnterpriseType_name, EnumEnterpriseType_value)
	proto.RegisterType((*PublicInfo)(nil), "PublicInfo")
}

func init() { proto.RegisterFile("enterprise.proto", fileDescriptor_922055c08d0eda7a) }

var fileDescriptor_922055c08d0eda7a = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x5f, 0x4f, 0xdb, 0x3c,
	0x14, 0x87, 0xdf, 0xf2, 0xa7, 0xd0, 0x03, 0x14, 0xe3, 0x77, 0x43, 0x16, 0x9a, 0x26, 0xc4, 0xc5,
	0x84, 0x76, 0x11, 0x24, 0x76, 0xb9, 0xab, 0xd2, 0xba, 0x90, 0x89, 0xb5, 0x91, 0x1b, 0x06, 0x43,
	0x93, 0x90, 0x9b, 0x98, 0xce, 0x52, 0x63, 0x47, 0x8e, 0xc3, 0xd6, 0x8f, 0x36, 0x69, 0x1f, 0x6e,
	0x6a, 0x80, 0x25, 0x29, 0x30, 0x25, 0x97, 0xfe, 0x9d, 0x3c, 0x4f, 0x7c, 0x4e, 0xec, 0x00, 0x12,
	0xca, 0x0a, 0x13, 0x1b, 0x99, 0x08, 0x27, 0x36, 0xda, 0xea, 0xbd, 0xb7, 0x13, 0xad, 0x27, 0x53,
	0x71, 0x94, 0xad, 0xc6, 0xe9, 0xed, 0xd1, 0x0f, 0xc3, 0xe3, 0x58, 0x98, 0xe4, 0xbe, 0x7e, 0xf0,
	0x0b, 0x00, 0xbc, 0x74, 0x3c, 0x95, 0x81, 0xab, 0x6e, 0x35, 0x76, 0x00, 0xe7, 0x8a, 0xcf, 0xd2,
	0x18, 0x6d, 0xdc, 0x90, 0x34, 0xf6, 0x1b, 0x87, 0x2d, 0xf6, 0x4c, 0x05, 0x7f, 0x84, 0x76, 0x9e,
	0xfa, 0xb3, 0x58, 0x90, 0xa5, 0xfd, 0xc6, 0x61, 0xfb, 0xf8, 0x7f, 0x87, 0xaa, 0x34, 0xa2, 0xa5,
	0x12, 0x5b, 0x78, 0x14, 0xbf, 0x2b, 0xc2, 0x03, 0x1e, 0x09, 0xb2, 0x9c, 0xbd, 0x68, 0x21, 0xc5,
	0x1e, 0xbc, 0xca, 0x93, 0xbe, 0x36, 0x91, 0x30, 0xd9, 0xd3, 0x2b, 0xfb, 0x8d, 0xc3, 0x8d, 0xe3,
	0x37, 0xce, 0x7d, 0x8b, 0xce, 0x63, 0x8b, 0xce, 0xc8, 0x1a, 0xa9, 0x26, 0x5f, 0xf8, 0x34, 0x15,
	0xec, 0x59, 0x12, 0x9f, 0xc0, 0x56, 0x21, 0xe7, 0x3f, 0xc9, 0x6a, 0x05, 0x55, 0x19, 0xc1, 0x7d,
	0xd8, 0xce, 0x03, 0x1a, 0x71, 0x39, 0x25, 0xcd, 0x0a, 0x96, 0x45, 0xa8, 0xec, 0xf1, 0xbe, 0x6b,
	0x25, 0xc8, 0x5a, 0x3d, 0x4f, 0x06, 0xe1, 0x4f, 0xb0, 0x93, 0x47, 0x97, 0x62, 0x9c, 0x48, 0x2b,
	0xc8, 0x7a, 0x05, 0xd3, 0x53, 0x0c, 0xfb, 0xb0, 0x9b, 0x87, 0xae, 0xb2, 0x26, 0x0d, 0xd3, 0xc0,
	0x4a, 0xad, 0x48, 0xab, 0x82, 0xf0, 0x05, 0xb6, 0xbc, 0xc3, 0x6b, 0x19, 0x77, 0x75, 0x28, 0x08,
	0xd4, 0xdb, 0xe1, 0x03, 0x56, 0x76, 0x75, 0xc2, 0xd0, 0x88, 0x24, 0x21, 0x1b, 0xf5, 0x5c, 0x0f,
	0x58, 0xf9, 0x7c, 0x75, 0x53, 0x65, 0xcd, 0x2c, 0xdb, 0xda, 0x66, 0xbd, 0xf3, 0x95, 0x93, 0xe5,
	0xf9, 0x9d, 0xeb, 0x80, 0xcf, 0xfb, 0xcf, 0x9c, 0x5b, 0xf5, 0xe6, 0x57, 0x64, 0xf1, 0x37, 0xd8,
	0x2b, 0x4e, 0x36, 0x4c, 0x93, 0xf9, 0xfb, 0xb8, 0x15, 0x13, 0x6d, 0x66, 0xa4, 0x5d, 0xc1, 0xfc,
	0x0f, 0x1e, 0x5f, 0x01, 0x29, 0x56, 0xef, 0x44, 0x62, 0x23, 0xa1, 0x6c, 0x76, 0xa9, 0xb7, 0x2b,
	0xb8, 0x5f, 0xa4, 0xf1, 0x01, 0x6c, 0x16, 0x6a, 0x21, 0x41, 0xd9, 0x2d, 0x2f, 0x65, 0xe5, 0xde,
	0x98, 0x98, 0xc8, 0xc4, 0x0a, 0xe3, 0x19, 0x7d, 0x27, 0x55, 0x20, 0xc8, 0x4e, 0xbd, 0xde, 0x16,
	0xf9, 0xf2, 0xf7, 0x78, 0xac, 0x76, 0xa5, 0x9d, 0x11, 0x5c, 0xef, 0x7b, 0x14, 0xd9, 0xf7, 0xbf,
	0x1b, 0x80, 0x9f, 0xfe, 0xe6, 0xf0, 0x06, 0xac, 0xf5, 0x68, 0xbf, 0x73, 0x71, 0xee, 0xa3, 0xff,
	0xf0, 0x26, 0xac, 0xfb, 0x74, 0xd0, 0xa3, 0x8c, 0x52, 0xd4, 0xc0, 0xaf, 0x61, 0xe7, 0x71, 0x75,
	0xe3, 0x0d, 0xaf, 0xbe, 0xde, 0x0c, 0xd9, 0x29, 0x5a, 0xc2, 0x00, 0xcd, 0x13, 0xb7, 0xd7, 0xa3,
	0x0c, 0x2d, 0xe3, 0x2d, 0x68, 0x79, 0x17, 0xac, 0x7b, 0xd6, 0x19, 0x51, 0x86, 0x56, 0xf0, 0x2e,
	0xe0, 0xbf, 0xcb, 0x1c, 0x59, 0x9d, 0x7b, 0x47, 0x17, 0x9e, 0x77, 0xee, 0x52, 0x86, 0x9a, 0xb8,
	0x0d, 0xe0, 0xb3, 0xce, 0x60, 0xd4, 0xa7, 0x6c, 0xc8, 0xd0, 0xda, 0xbc, 0xda, 0x19, 0x8d, 0xdc,
	0xd3, 0x01, 0xa5, 0x68, 0x7d, 0xae, 0xbf, 0x74, 0x07, 0x03, 0xca, 0x50, 0x0b, 0xb7, 0x60, 0x75,
	0xe8, 0x9f, 0x51, 0x86, 0x82, 0x93, 0x23, 0x38, 0x08, 0x94, 0x33, 0x96, 0x61, 0x92, 0x2a, 0x27,
	0x12, 0x96, 0x87, 0xdc, 0x72, 0x27, 0xd0, 0x51, 0xa4, 0xd5, 0xfd, 0x20, 0x42, 0xae, 0xaf, 0x5b,
	0xd6, 0x70, 0x95, 0xc4, 0xda, 0xd8, 0x71, 0x33, 0x0b, 0x3f, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff,
	0xd7, 0xd5, 0x47, 0x14, 0x66, 0x06, 0x00, 0x00,
}
