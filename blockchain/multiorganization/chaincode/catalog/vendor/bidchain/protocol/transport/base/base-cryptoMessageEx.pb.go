// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base-cryptoMessageEx.proto

package base

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CryptoMessageEx struct {
	PlatformId           string          `protobuf:"bytes,1,opt,name=platformId,proto3" json:"platformId,omitempty"`
	HashBeforeEncrypt    []byte          `protobuf:"bytes,2,opt,name=hashBeforeEncrypt,proto3" json:"hashBeforeEncrypt,omitempty"`
	HashMethod           string          `protobuf:"bytes,3,opt,name=hashMethod,proto3" json:"hashMethod,omitempty"`
	EncryptMethod        string          `protobuf:"bytes,4,opt,name=encryptMethod,proto3" json:"encryptMethod,omitempty"`
	DataType             string          `protobuf:"bytes,5,opt,name=dataType,proto3" json:"dataType,omitempty"`
	MessageData          []byte          `protobuf:"bytes,6,opt,name=messageData,proto3" json:"messageData,omitempty"`
	EnvelopInfo          []*EnvelopeInfo `protobuf:"bytes,7,rep,name=envelopInfo,proto3" json:"envelopInfo,omitempty"`
	Extension            string          `protobuf:"bytes,8,opt,name=extension,proto3" json:"extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CryptoMessageEx) Reset()         { *m = CryptoMessageEx{} }
func (m *CryptoMessageEx) String() string { return proto.CompactTextString(m) }
func (*CryptoMessageEx) ProtoMessage()    {}
func (*CryptoMessageEx) Descriptor() ([]byte, []int) {
	return fileDescriptor_b1f169252000147f, []int{0}
}

func (m *CryptoMessageEx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoMessageEx.Unmarshal(m, b)
}
func (m *CryptoMessageEx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoMessageEx.Marshal(b, m, deterministic)
}
func (m *CryptoMessageEx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoMessageEx.Merge(m, src)
}
func (m *CryptoMessageEx) XXX_Size() int {
	return xxx_messageInfo_CryptoMessageEx.Size(m)
}
func (m *CryptoMessageEx) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoMessageEx.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoMessageEx proto.InternalMessageInfo

func (m *CryptoMessageEx) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *CryptoMessageEx) GetHashBeforeEncrypt() []byte {
	if m != nil {
		return m.HashBeforeEncrypt
	}
	return nil
}

func (m *CryptoMessageEx) GetHashMethod() string {
	if m != nil {
		return m.HashMethod
	}
	return ""
}

func (m *CryptoMessageEx) GetEncryptMethod() string {
	if m != nil {
		return m.EncryptMethod
	}
	return ""
}

func (m *CryptoMessageEx) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *CryptoMessageEx) GetMessageData() []byte {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *CryptoMessageEx) GetEnvelopInfo() []*EnvelopeInfo {
	if m != nil {
		return m.EnvelopInfo
	}
	return nil
}

func (m *CryptoMessageEx) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func init() {
	proto.RegisterType((*CryptoMessageEx)(nil), "CryptoMessageEx")
}

func init() { proto.RegisterFile("base-cryptoMessageEx.proto", fileDescriptor_b1f169252000147f) }

var fileDescriptor_b1f169252000147f = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x95, 0x16, 0x4a, 0x7b, 0xa1, 0x42, 0x78, 0xa9, 0x89, 0x10, 0x8a, 0x10, 0x43, 0x06,
	0x68, 0x24, 0x78, 0x83, 0x42, 0x86, 0x0e, 0x5d, 0x22, 0x26, 0x36, 0xb7, 0xb9, 0x10, 0xa4, 0xd4,
	0x67, 0xd9, 0x27, 0xd4, 0xbe, 0x16, 0x4f, 0x88, 0xe2, 0x54, 0xd4, 0x15, 0xa3, 0xbf, 0xdf, 0xe7,
	0xfb, 0x07, 0xc9, 0x5a, 0x39, 0x7c, 0xda, 0xd8, 0xbd, 0x61, 0x5a, 0xa1, 0x73, 0xea, 0x13, 0x8b,
	0xdd, 0xdc, 0x58, 0x62, 0x4a, 0x66, 0x3e, 0x43, 0xfd, 0x8d, 0x2d, 0x19, 0x5c, 0xea, 0x9a, 0xfa,
	0xe0, 0xfe, 0x67, 0x00, 0x57, 0xaf, 0xa7, 0x5f, 0xc4, 0x1d, 0x80, 0x69, 0x15, 0xd7, 0x64, 0xb7,
	0xcb, 0x4a, 0x46, 0x69, 0x94, 0x4d, 0xca, 0x80, 0x88, 0x47, 0xb8, 0x6e, 0x94, 0x6b, 0x16, 0x58,
	0x93, 0xc5, 0x42, 0xfb, 0x8e, 0x72, 0x90, 0x46, 0xd9, 0x65, 0xf9, 0x3f, 0xe8, 0xaa, 0x75, 0x70,
	0x85, 0xdc, 0x50, 0x25, 0x87, 0x7d, 0xb5, 0x23, 0x11, 0x0f, 0x30, 0xc5, 0x5e, 0x3d, 0x28, 0x67,
	0x5e, 0x39, 0x85, 0x22, 0x81, 0x71, 0xa5, 0x58, 0xbd, 0xef, 0x0d, 0xca, 0x73, 0x2f, 0xfc, 0xbd,
	0x45, 0x0a, 0xf1, 0xb6, 0x1f, 0xfe, 0x4d, 0xb1, 0x92, 0x23, 0x3f, 0x49, 0x88, 0x44, 0x0e, 0xf1,
	0x61, 0xf7, 0x6e, 0x75, 0x79, 0x91, 0x0e, 0xb3, 0xf8, 0x79, 0x3a, 0x2f, 0x82, 0x7b, 0x94, 0xa1,
	0x21, 0x6e, 0x61, 0x82, 0x3b, 0x46, 0xed, 0xbe, 0x48, 0xcb, 0xb1, 0xef, 0x77, 0x04, 0x8b, 0x9b,
	0x8f, 0x99, 0xbf, 0xde, 0x86, 0xda, 0x9c, 0xad, 0xd2, 0xce, 0x90, 0xe5, 0xbc, 0x3b, 0xf1, 0x7a,
	0xe4, 0x83, 0x97, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x63, 0x9b, 0xc6, 0x8d, 0x01, 0x00,
	0x00,
}
