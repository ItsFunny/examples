// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enterprise.proto

package store

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StoreEnumEnterpriseType int32

const (
	StoreEnumEnterpriseType_DEFAULT            StoreEnumEnterpriseType = 0
	StoreEnumEnterpriseType_TENDEREE           StoreEnumEnterpriseType = 1
	StoreEnumEnterpriseType_TENDEREE_POXY_ORG  StoreEnumEnterpriseType = 2
	StoreEnumEnterpriseType_BIDDER             StoreEnumEnterpriseType = 3
	StoreEnumEnterpriseType_PURCHASER          StoreEnumEnterpriseType = 4
	StoreEnumEnterpriseType_PURCHASER_POXY_ORG StoreEnumEnterpriseType = 5
	StoreEnumEnterpriseType_SUPPLIER           StoreEnumEnterpriseType = 6
	StoreEnumEnterpriseType_TRANSFEROR         StoreEnumEnterpriseType = 7
	StoreEnumEnterpriseType_ASSIGNEE           StoreEnumEnterpriseType = 8
	StoreEnumEnterpriseType_WINNER             StoreEnumEnterpriseType = 9
	StoreEnumEnterpriseType_OTHER              StoreEnumEnterpriseType = 99
)

var StoreEnumEnterpriseType_name = map[int32]string{
	0:  "DEFAULT",
	1:  "TENDEREE",
	2:  "TENDEREE_POXY_ORG",
	3:  "BIDDER",
	4:  "PURCHASER",
	5:  "PURCHASER_POXY_ORG",
	6:  "SUPPLIER",
	7:  "TRANSFEROR",
	8:  "ASSIGNEE",
	9:  "WINNER",
	99: "OTHER",
}

var StoreEnumEnterpriseType_value = map[string]int32{
	"DEFAULT":            0,
	"TENDEREE":           1,
	"TENDEREE_POXY_ORG":  2,
	"BIDDER":             3,
	"PURCHASER":          4,
	"PURCHASER_POXY_ORG": 5,
	"SUPPLIER":           6,
	"TRANSFEROR":         7,
	"ASSIGNEE":           8,
	"WINNER":             9,
	"OTHER":              99,
}

func (x StoreEnumEnterpriseType) String() string {
	return proto.EnumName(StoreEnumEnterpriseType_name, int32(x))
}

func (StoreEnumEnterpriseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_922055c08d0eda7a, []int{0}
}

type StorePublicInfo struct {
	//企业副主键
	EnterpriseMirrorId string `protobuf:"bytes,1,opt,name=enterpriseMirrorId,proto3" json:"enterpriseMirrorId,omitempty"`
	//企业注册类型
	EnterpriseType StoreEnumEnterpriseType `protobuf:"varint,2,opt,name=enterpriseType,proto3,enum=StoreEnumEnterpriseType" json:"enterpriseType,omitempty"`
	//企业名称
	EnterpriseName string `protobuf:"bytes,3,opt,name=enterpriseName,proto3" json:"enterpriseName,omitempty"`
	//曾用名
	EnterpriseFormerName *wrappers.StringValue `protobuf:"bytes,4,opt,name=enterpriseFormerName,proto3" json:"enterpriseFormerName,omitempty"`
	//传真
	EnterpriseFax *wrappers.StringValue `protobuf:"bytes,5,opt,name=enterpriseFax,proto3" json:"enterpriseFax,omitempty"`
	//邮箱
	EnterpriseEmail *wrappers.StringValue `protobuf:"bytes,6,opt,name=enterpriseEmail,proto3" json:"enterpriseEmail,omitempty"`
	//联系电话
	EnterprisePhone *wrappers.StringValue `protobuf:"bytes,7,opt,name=enterprisePhone,proto3" json:"enterprisePhone,omitempty"`
	//网站
	EnterpriseWebsite *wrappers.StringValue `protobuf:"bytes,8,opt,name=enterpriseWebsite,proto3" json:"enterpriseWebsite,omitempty"`
	//简介
	EnterpriseIntruduction *wrappers.StringValue `protobuf:"bytes,9,opt,name=enterpriseIntruduction,proto3" json:"enterpriseIntruduction,omitempty"`
	//邮政编码
	EnterpriseZipCode *wrappers.StringValue `protobuf:"bytes,10,opt,name=enterpriseZipCode,proto3" json:"enterpriseZipCode,omitempty"`
	//单位联系地址
	EnterpriseAddress *wrappers.StringValue `protobuf:"bytes,11,opt,name=enterpriseAddress,proto3" json:"enterpriseAddress,omitempty"`
	//国别 http://www.nsfc.gov.cn/publish/portal0/tab274/
	EnterpriseCuntryCode *wrappers.StringValue `protobuf:"bytes,12,opt,name=enterpriseCuntryCode,proto3" json:"enterpriseCuntryCode,omitempty"`
	//注册区域
	EnterpriseLocationCode *wrappers.StringValue `protobuf:"bytes,13,opt,name=enterpriseLocationCode,proto3" json:"enterpriseLocationCode,omitempty"`
	//行业分类 法人机构行业代码
	EnterpriseIndustryCategory *wrappers.StringValue `protobuf:"bytes,14,opt,name=enterpriseIndustryCategory,proto3" json:"enterpriseIndustryCategory,omitempty"`
	//单位经济性质
	EnterpriseInvestmentType *wrappers.StringValue `protobuf:"bytes,15,opt,name=enterpriseInvestmentType,proto3" json:"enterpriseInvestmentType,omitempty"`
	//企业id
	EnterpriseId string `protobuf:"bytes,16,opt,name=enterpriseId,proto3" json:"enterpriseId,omitempty"`
	//注册省
	EnterpriseRegisterProvince *wrappers.StringValue `protobuf:"bytes,17,opt,name=enterpriseRegisterProvince,proto3" json:"enterpriseRegisterProvince,omitempty"`
	//注册市
	EnterpriseRegisterCity *wrappers.StringValue `protobuf:"bytes,18,opt,name=enterpriseRegisterCity,proto3" json:"enterpriseRegisterCity,omitempty"`
	Mask                   int64                 `protobuf:"varint,19,opt,name=mask,proto3" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *StorePublicInfo) Reset()         { *m = StorePublicInfo{} }
func (m *StorePublicInfo) String() string { return proto.CompactTextString(m) }
func (*StorePublicInfo) ProtoMessage()    {}
func (*StorePublicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_922055c08d0eda7a, []int{0}
}

func (m *StorePublicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorePublicInfo.Unmarshal(m, b)
}
func (m *StorePublicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorePublicInfo.Marshal(b, m, deterministic)
}
func (m *StorePublicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorePublicInfo.Merge(m, src)
}
func (m *StorePublicInfo) XXX_Size() int {
	return xxx_messageInfo_StorePublicInfo.Size(m)
}
func (m *StorePublicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StorePublicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StorePublicInfo proto.InternalMessageInfo

func (m *StorePublicInfo) GetEnterpriseMirrorId() string {
	if m != nil {
		return m.EnterpriseMirrorId
	}
	return ""
}

func (m *StorePublicInfo) GetEnterpriseType() StoreEnumEnterpriseType {
	if m != nil {
		return m.EnterpriseType
	}
	return StoreEnumEnterpriseType_DEFAULT
}

func (m *StorePublicInfo) GetEnterpriseName() string {
	if m != nil {
		return m.EnterpriseName
	}
	return ""
}

func (m *StorePublicInfo) GetEnterpriseFormerName() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseFormerName
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseFax() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseFax
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseEmail() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseEmail
	}
	return nil
}

func (m *StorePublicInfo) GetEnterprisePhone() *wrappers.StringValue {
	if m != nil {
		return m.EnterprisePhone
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseWebsite() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseWebsite
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseIntruduction() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseIntruduction
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseZipCode() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseZipCode
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseAddress() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseAddress
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseCuntryCode() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseCuntryCode
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseLocationCode() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseLocationCode
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseIndustryCategory() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseIndustryCategory
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseInvestmentType() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseInvestmentType
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

func (m *StorePublicInfo) GetEnterpriseRegisterProvince() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseRegisterProvince
	}
	return nil
}

func (m *StorePublicInfo) GetEnterpriseRegisterCity() *wrappers.StringValue {
	if m != nil {
		return m.EnterpriseRegisterCity
	}
	return nil
}

func (m *StorePublicInfo) GetMask() int64 {
	if m != nil {
		return m.Mask
	}
	return 0
}

func init() {
	proto.RegisterEnum("StoreEnumEnterpriseType", StoreEnumEnterpriseType_name, StoreEnumEnterpriseType_value)
	proto.RegisterType((*StorePublicInfo)(nil), "StorePublicInfo")
}

func init() { proto.RegisterFile("enterprise.proto", fileDescriptor_922055c08d0eda7a) }

var fileDescriptor_922055c08d0eda7a = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xd1, 0x4e, 0xdb, 0x30,
	0x14, 0x86, 0x17, 0xa0, 0x2d, 0x3d, 0x40, 0x31, 0x67, 0x1b, 0xb3, 0xd0, 0x34, 0x55, 0x5c, 0x4c,
	0xd5, 0x2e, 0x8a, 0xc4, 0x5e, 0x60, 0xa5, 0x75, 0x21, 0x13, 0x6b, 0x23, 0xa7, 0x0c, 0x86, 0x26,
	0xa1, 0xb4, 0x31, 0x5d, 0xb4, 0x36, 0x8e, 0x1c, 0x87, 0xad, 0x8f, 0xb7, 0xa7, 0xd8, 0xeb, 0x4c,
	0x09, 0xb0, 0x24, 0x1d, 0x9d, 0x92, 0xbb, 0xfa, 0x3f, 0xf9, 0xbe, 0xf8, 0x9c, 0xd8, 0x05, 0x22,
	0x7c, 0x2d, 0x54, 0xa0, 0xbc, 0x50, 0xb4, 0x03, 0x25, 0xb5, 0x3c, 0x78, 0x33, 0x95, 0x72, 0x3a,
	0x13, 0x47, 0xc9, 0x6a, 0x1c, 0xdd, 0x1e, 0xfd, 0x50, 0x4e, 0x10, 0x08, 0x15, 0xde, 0xd7, 0x0f,
	0x7f, 0x03, 0xec, 0xda, 0x5a, 0x2a, 0x61, 0x45, 0xe3, 0x99, 0x37, 0x31, 0xfd, 0x5b, 0x89, 0x6d,
	0xc0, 0xd4, 0xf3, 0xc9, 0x53, 0x4a, 0x2a, 0xd3, 0xa5, 0x46, 0xd3, 0x68, 0xd5, 0xf9, 0x13, 0x15,
	0xfc, 0x00, 0x8d, 0x34, 0x1d, 0x2d, 0x02, 0x41, 0xd7, 0x9a, 0x46, 0xab, 0x71, 0x4c, 0xdb, 0x89,
	0x99, 0xf9, 0xd1, 0x9c, 0xe5, 0xea, 0x7c, 0xe9, 0x79, 0x7c, 0x9b, 0x35, 0x0c, 0x9c, 0xb9, 0xa0,
	0xeb, 0xc9, 0xdb, 0x96, 0x52, 0xb4, 0xe0, 0x45, 0x9a, 0xf4, 0xa5, 0x9a, 0x0b, 0x95, 0x3c, 0xbd,
	0xd1, 0x34, 0x5a, 0x5b, 0xc7, 0xaf, 0xdb, 0xf7, 0xcd, 0xb6, 0x1f, 0x9b, 0x6d, 0xdb, 0x5a, 0x79,
	0xfe, 0xf4, 0xb3, 0x33, 0x8b, 0x04, 0x7f, 0x92, 0xc4, 0x13, 0xd8, 0xc9, 0xe4, 0xce, 0x4f, 0x5a,
	0x29, 0xa0, 0xca, 0x23, 0xd8, 0x87, 0xdd, 0x34, 0x60, 0x73, 0xc7, 0x9b, 0xd1, 0x6a, 0x01, 0xcb,
	0x32, 0x94, 0xf7, 0x58, 0xdf, 0xa4, 0x2f, 0x68, 0xad, 0x9c, 0x27, 0x81, 0xf0, 0x23, 0xec, 0xa5,
	0xd1, 0xa5, 0x18, 0x87, 0x9e, 0x16, 0x74, 0xb3, 0x80, 0xe9, 0x5f, 0x0c, 0x47, 0xb0, 0x9f, 0x86,
	0xa6, 0xaf, 0x55, 0xe4, 0x46, 0x13, 0xed, 0x49, 0x9f, 0xd6, 0x0b, 0x08, 0x57, 0xb0, 0xf9, 0x1d,
	0x5e, 0x7b, 0x41, 0x57, 0xba, 0x82, 0x42, 0xb9, 0x1d, 0x3e, 0x60, 0x79, 0x57, 0xc7, 0x75, 0x95,
	0x08, 0x43, 0xba, 0x55, 0xce, 0xf5, 0x80, 0xe5, 0xcf, 0x57, 0x37, 0xf2, 0xb5, 0x5a, 0x24, 0x5b,
	0xdb, 0x2e, 0x77, 0xbe, 0x52, 0x32, 0x3f, 0xbf, 0x73, 0x39, 0x71, 0xe2, 0xfe, 0x13, 0xe7, 0x4e,
	0xb9, 0xf9, 0x65, 0x59, 0xfc, 0x0a, 0x07, 0xd9, 0xc9, 0xba, 0x51, 0x18, 0xbf, 0xcf, 0xd1, 0x62,
	0x2a, 0xd5, 0x82, 0x36, 0x0a, 0x98, 0xff, 0xc3, 0xe3, 0x15, 0xd0, 0x6c, 0xf5, 0x4e, 0x84, 0x7a,
	0x2e, 0x7c, 0x9d, 0xdc, 0xec, 0xdd, 0x02, 0xee, 0x95, 0x34, 0x1e, 0xc2, 0x76, 0xa6, 0xe6, 0x52,
	0x92, 0xdc, 0xf2, 0x5c, 0x96, 0xef, 0x8d, 0x8b, 0xa9, 0x17, 0x6a, 0xa1, 0x2c, 0x25, 0xef, 0x3c,
	0x7f, 0x22, 0xe8, 0x5e, 0xb9, 0xde, 0x96, 0xf9, 0xfc, 0xf7, 0x78, 0xac, 0x76, 0x3d, 0xbd, 0xa0,
	0x58, 0xee, 0x7b, 0x64, 0x59, 0x44, 0xd8, 0x98, 0x3b, 0xe1, 0x77, 0xfa, 0xbc, 0x69, 0xb4, 0xd6,
	0x79, 0xf2, 0xfb, 0xdd, 0x2f, 0x03, 0x5e, 0xad, 0xf8, 0xff, 0xc3, 0x2d, 0xa8, 0xf5, 0x58, 0xbf,
	0x73, 0x71, 0x3e, 0x22, 0xcf, 0x70, 0x1b, 0x36, 0x47, 0x6c, 0xd0, 0x63, 0x9c, 0x31, 0x62, 0xe0,
	0x4b, 0xd8, 0x7b, 0x5c, 0xdd, 0x58, 0xc3, 0xab, 0x2f, 0x37, 0x43, 0x7e, 0x4a, 0xd6, 0x10, 0xa0,
	0x7a, 0x62, 0xf6, 0x7a, 0x8c, 0x93, 0x75, 0xdc, 0x81, 0xba, 0x75, 0xc1, 0xbb, 0x67, 0x1d, 0x9b,
	0x71, 0xb2, 0x81, 0xfb, 0x80, 0x7f, 0x97, 0x29, 0x52, 0x89, 0xbd, 0xf6, 0x85, 0x65, 0x9d, 0x9b,
	0x8c, 0x93, 0x2a, 0x36, 0x00, 0x46, 0xbc, 0x33, 0xb0, 0xfb, 0x8c, 0x0f, 0x39, 0xa9, 0xc5, 0xd5,
	0x8e, 0x6d, 0x9b, 0xa7, 0x03, 0xc6, 0xc8, 0x66, 0xac, 0xbf, 0x34, 0x07, 0x03, 0xc6, 0x49, 0x1d,
	0xeb, 0x50, 0x19, 0x8e, 0xce, 0x18, 0x27, 0x93, 0x93, 0xda, 0x75, 0x25, 0x8c, 0x5b, 0x18, 0x57,
	0x93, 0x71, 0xbc, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xae, 0x78, 0x41, 0xa4, 0x61, 0x06, 0x00,
	0x00,
}
