// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 请求投票
type RPCRequestVoteReq struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LastLogIndex         int32    `protobuf:"varint,2,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm          int64    `protobuf:"varint,3,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPCRequestVoteReq) Reset()         { *m = RPCRequestVoteReq{} }
func (m *RPCRequestVoteReq) String() string { return proto.CompactTextString(m) }
func (*RPCRequestVoteReq) ProtoMessage()    {}
func (*RPCRequestVoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *RPCRequestVoteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCRequestVoteReq.Unmarshal(m, b)
}
func (m *RPCRequestVoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCRequestVoteReq.Marshal(b, m, deterministic)
}
func (m *RPCRequestVoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCRequestVoteReq.Merge(m, src)
}
func (m *RPCRequestVoteReq) XXX_Size() int {
	return xxx_messageInfo_RPCRequestVoteReq.Size(m)
}
func (m *RPCRequestVoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCRequestVoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_RPCRequestVoteReq proto.InternalMessageInfo

func (m *RPCRequestVoteReq) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RPCRequestVoteReq) GetLastLogIndex() int32 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RPCRequestVoteReq) GetLastLogTerm() int64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

// 服务端响应信息
type RPCRequestVoteResp struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPCRequestVoteResp) Reset()         { *m = RPCRequestVoteResp{} }
func (m *RPCRequestVoteResp) String() string { return proto.CompactTextString(m) }
func (*RPCRequestVoteResp) ProtoMessage()    {}
func (*RPCRequestVoteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *RPCRequestVoteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCRequestVoteResp.Unmarshal(m, b)
}
func (m *RPCRequestVoteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCRequestVoteResp.Marshal(b, m, deterministic)
}
func (m *RPCRequestVoteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCRequestVoteResp.Merge(m, src)
}
func (m *RPCRequestVoteResp) XXX_Size() int {
	return xxx_messageInfo_RPCRequestVoteResp.Size(m)
}
func (m *RPCRequestVoteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCRequestVoteResp.DiscardUnknown(m)
}

var xxx_messageInfo_RPCRequestVoteResp proto.InternalMessageInfo

func (m *RPCRequestVoteResp) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RPCRequestVoteResp) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

func init() {
	proto.RegisterType((*RPCRequestVoteReq)(nil), "server.RPCRequestVoteReq")
	proto.RegisterType((*RPCRequestVoteResp)(nil), "server.RPCRequestVoteResp")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x72, 0xb9, 0x04,
	0x83, 0x02, 0x9c, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xc2, 0xf2, 0x4b, 0x52, 0x83, 0x52,
	0x0b, 0x85, 0x84, 0xb8, 0x58, 0x4a, 0x52, 0x8b, 0x72, 0x25, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83,
	0xc0, 0x6c, 0x21, 0x25, 0x2e, 0x9e, 0x9c, 0xc4, 0xe2, 0x12, 0x9f, 0xfc, 0x74, 0xcf, 0xbc, 0x94,
	0xd4, 0x0a, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x14, 0x31, 0x21, 0x05, 0x2e, 0x6e, 0x28,
	0x3f, 0x04, 0xa4, 0x9d, 0x19, 0xac, 0x1d, 0x59, 0x48, 0xc9, 0x8b, 0x4b, 0x08, 0xdd, 0xba, 0xe2,
	0x02, 0xac, 0xf6, 0x29, 0x70, 0x71, 0x97, 0xe5, 0x97, 0xa4, 0xba, 0x17, 0x25, 0xe6, 0x95, 0xa4,
	0xa6, 0x80, 0xad, 0xe3, 0x08, 0x42, 0x16, 0x32, 0x0a, 0xe3, 0x62, 0x0b, 0x06, 0x7b, 0x42, 0xc8,
	0x07, 0xd9, 0x13, 0x6e, 0xf9, 0x45, 0x20, 0x83, 0x85, 0x24, 0xf5, 0xa0, 0x1e, 0xc6, 0xf0, 0x9f,
	0x94, 0x14, 0x2e, 0xa9, 0xe2, 0x02, 0x25, 0x86, 0x24, 0x36, 0x70, 0x08, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x81, 0xd9, 0xd2, 0x9b, 0x31, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	// 服务端返馈信息方法
	RPCRequestForVote(ctx context.Context, in *RPCRequestVoteReq, opts ...grpc.CallOption) (*RPCRequestVoteResp, error)
}

type serverClient struct {
	cc *grpc.ClientConn
}

func NewServerClient(cc *grpc.ClientConn) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) RPCRequestForVote(ctx context.Context, in *RPCRequestVoteReq, opts ...grpc.CallOption) (*RPCRequestVoteResp, error) {
	out := new(RPCRequestVoteResp)
	err := c.cc.Invoke(ctx, "/server.Server/RPCRequestForVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	// 服务端返馈信息方法
	RPCRequestForVote(context.Context, *RPCRequestVoteReq) (*RPCRequestVoteResp, error)
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_RPCRequestForVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RPCRequestVoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).RPCRequestForVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Server/RPCRequestForVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).RPCRequestForVote(ctx, req.(*RPCRequestVoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.Server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RPCRequestForVote",
			Handler:    _Server_RPCRequestForVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
