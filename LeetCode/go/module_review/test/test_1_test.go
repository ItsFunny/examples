/*
# -*- coding: utf-8 -*-
# @Author : joker
# @Time : 2020-08-12 10:03
# @File : test_1.go
# @Description :
# @Attention :
*/
package test

import (
	"fmt"
	"testing"
)

const (
	TASK_BEGIN_DELTA        = 1 << 0
	TASK_BEGIN_PRERUN       = 1 << 1
	TASK_BEGIN_DELTA_EXISTS = 1 << 2

	TASK_DELTA   = 1 << 3
	TASK_PRERRUN = 1 << 4
)

const (
	TRACE_PRERUN_WITH_CACHE    = 1 << 30
	TRACE_PRERUN_WITH_NO_CACHE = 1 << 29
	TRACE_DELTA                = 1 << 28

	RESULT_TRAEC   = 1 << 27
	SPECICAL_TRACE = 1 << 26

	RACE_BEGINBLOCK_SUCCESS = 1 << 25
	RACE_BEGINBLOCK_FAIL    = 1 << 24

	RACE_END_SUCCESS = 1 << 23
	RACE_END_FAIL    = 1 << 22

	// delta
	CASE_DELTA_SITUATION_GET_BEGIN_BLOCK_LOCK_SUCCESS                                    = 1<<21 | TRACE_DELTA | RACE_BEGINBLOCK_SUCCESS
	CASE_DELTA_SITUATION_BEGIN_BLOCK_FAILED_FOR_DELTA_ALREADY_EXISTS_IN_CACHE_BY_PRERRUN = 1<<20 | TRACE_DELTA | RACE_BEGINBLOCK_FAIL
	CASE_DELTA_SITUATION_BEGIN_BLOCK_FAILED_FOR_TASK_FINISHED_BY_PRERRUN                 = 1<<19 | TRACE_DELTA | RACE_BEGINBLOCK_FAIL
	CASE_DELTA_SITUATION_BEGIN_BLOCK_FAILED_AND_NOTIFIED_BY_PRERRUN                      = 1<<18 | TRACE_DELTA | RACE_BEGINBLOCK_FAIL

	CASE_DELTA_SITUATION_RACE_END_SUCCESS = 1<<17 | TRACE_DELTA | RACE_END_SUCCESS
	CASE_DELTA_SITUATION_RACE_END_FAIL    = 1<<16 | TRACE_DELTA | RACE_END_FAIL

	// prerrun with cache
	CASE_PRERRUNDELTA_SITUATION_GET_BEGIN_BLOCK_LOCK_SUCCESS = 1<<15 | TRACE_PRERUN_WITH_CACHE | RACE_BEGINBLOCK_SUCCESS
	CASE_PRERRUNDELTA_SITUATION_GET_BEGIN_BLOCK_LOCK_FAILED  = 1<<14 | TRACE_PRERUN_WITH_CACHE | RACE_BEGINBLOCK_FAIL

	// prerun no cache
	CASE_PRERUN_SITUATION_GET_BEGIN_BLOCK_LOCK_SUCCESS = 1<<13 | TRACE_PRERUN_WITH_NO_CACHE | RACE_BEGINBLOCK_SUCCESS
	CASE_PRERUN_SITUATION_GET_BEGIN_BLOCK_LOCK_FAILED  = 1<<12 | TRACE_PRERUN_WITH_NO_CACHE | RACE_BEGINBLOCK_FAIL

	CASE_PRERRUN_SITUATION_RACE_END_SUCCESS = 1<<11 | TRACE_PRERUN_WITH_NO_CACHE | RACE_END_SUCCESS
	CASE_PRERRUN_SITUATION_RACE_END_FAIL    = 1<<10 | TRACE_PRERUN_WITH_NO_CACHE | RACE_END_FAIL

	CASE_PRERRUN_CANCELED_BY_DELTA                          = 1<<9 | TRACE_PRERUN_WITH_NO_CACHE
	CASE_DELTA_ENTER_CHAN_RECEIVE_WAIT_PRERRUN_CLOSE_NOTIFY = 1 << 8

	// result trace

	// special trace
	CASE_SPECIAL_PRERUN_BEFORE_RACE_END   = 1<<7 | SPECICAL_TRACE
	CASE_SPECIAL_DELTA_BEFORE_RACE_END    = 1<<6 | SPECICAL_TRACE
	CASE_SPECIAL_BEFORE_LOAD_CACHE        = 1<<5 | SPECICAL_TRACE
	CASE_SPECIAL_DELTA_BEFORE_BEGIN       = 1<<4 | SPECICAL_TRACE
	CASE_SPECIAL_DELTA_BEFORE_FINAL_STORE = 1<<3 | SPECICAL_TRACE
	CASE_SPECIAL_AFTER_LOAD_CACHE         = 1<<2 | SPECICAL_TRACE
)

func TestParse(t *testing.T) {
	f := func(v []int32) {
		for i := 0; i < len(v); i++ {
			fmt.Println(i, v[i])
		}
	}
	f([]int32{
		//TASK_BEGIN_DELTA,
		//TASK_BEGIN_PRERUN,
		//TASK_BEGIN_DELTA_EXISTS,
		//RESULT_TRAEC,
		//TASK_PRERRUN,

		TRACE_PRERUN_WITH_CACHE,
		TRACE_PRERUN_WITH_NO_CACHE,
		TRACE_DELTA,
		RESULT_TRAEC,
		SPECICAL_TRACE,
		RACE_BEGINBLOCK_SUCCESS,
		RACE_BEGINBLOCK_FAIL,
		CASE_DELTA_SITUATION_GET_BEGIN_BLOCK_LOCK_SUCCESS,
		CASE_DELTA_SITUATION_BEGIN_BLOCK_FAILED_FOR_DELTA_ALREADY_EXISTS_IN_CACHE_BY_PRERRUN,
		CASE_DELTA_SITUATION_BEGIN_BLOCK_FAILED_FOR_TASK_FINISHED_BY_PRERRUN,
		CASE_DELTA_SITUATION_BEGIN_BLOCK_FAILED_AND_NOTIFIED_BY_PRERRUN,
		CASE_DELTA_SITUATION_RACE_END_SUCCESS,
		CASE_DELTA_SITUATION_RACE_END_FAIL,
		CASE_PRERRUNDELTA_SITUATION_GET_BEGIN_BLOCK_LOCK_SUCCESS,
		CASE_PRERRUNDELTA_SITUATION_GET_BEGIN_BLOCK_LOCK_FAILED,
		CASE_PRERUN_SITUATION_GET_BEGIN_BLOCK_LOCK_SUCCESS,
		CASE_PRERUN_SITUATION_GET_BEGIN_BLOCK_LOCK_FAILED,
		CASE_PRERRUN_SITUATION_RACE_END_SUCCESS,
		CASE_PRERRUN_SITUATION_RACE_END_FAIL,
		CASE_PRERRUN_CANCELED_BY_DELTA,
		CASE_DELTA_ENTER_CHAN_RECEIVE_WAIT_PRERRUN_CLOSE_NOTIFY,
		CASE_SPECIAL_PRERUN_BEFORE_RACE_END,
		CASE_SPECIAL_DELTA_BEFORE_RACE_END,
		CASE_SPECIAL_BEFORE_LOAD_CACHE,
		CASE_SPECIAL_DELTA_BEFORE_BEGIN,
		CASE_SPECIAL_DELTA_BEFORE_FINAL_STORE,
		CASE_SPECIAL_AFTER_LOAD_CACHE,
	})

}
